// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/feedbacks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Получить список заявок (админка) с пагинацией и фильтрацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Feedback"
                ],
                "summary": "Get feedbacks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество (20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение (0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по телефону",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Фильтр по прочитанности",
                        "name": "is_read",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.FeedbacksWithTotal"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/feedbacks/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Admin — Feedback"
                ],
                "summary": "Delete feedback",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feedback ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/feedbacks/{id}/read": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Admin — Feedback"
                ],
                "summary": "Mark feedback as read",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feedback ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/hotels": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Hotels"
                ],
                "summary": "List hotels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.HotelResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Не удалось получить список отелей",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Hotels"
                ],
                "summary": "Create hotel",
                "parameters": [
                    {
                        "description": "Hotel",
                        "name": "hotel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HotelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HotelResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Не удалось создать отель",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/hotels/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Hotels"
                ],
                "summary": "Get hotel by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hotel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HotelResponse"
                        }
                    },
                    "404": {
                        "description": "Отель не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Hotels"
                ],
                "summary": "Update hotel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hotel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hotel",
                        "name": "hotel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.HotelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HotelResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Не удалось обновить отель",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin — Hotels"
                ],
                "summary": "Delete hotel",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hotel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный ID",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Не удалось удалить отель",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/media/cleanup": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Удалить неиспользуемые фото из /uploads (админка)",
                "tags": [
                    "Admin — Media"
                ],
                "summary": "Cleanup unused media files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/news": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — News"
                ],
                "summary": "List news (admin)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Статус: draft|published|archived",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по категории",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по типу медиа",
                        "name": "media_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поиск по заголовку/анонсу",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Размер страницы (по умолчанию 20)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Не удалось получить список новостей",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — News"
                ],
                "summary": "Create news (admin)",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateNewsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    },
                    "400": {
                        "description": "Некорректный JSON или ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/news/categories": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — News"
                ],
                "summary": "Получить список категорий новостей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NewsCategory"
                            }
                        }
                    },
                    "500": {
                        "description": "Не удалось получить категории",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — News"
                ],
                "summary": "Создать категорию новостей",
                "parameters": [
                    {
                        "description": "Данные категории",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateNewsCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.NewsCategory"
                        }
                    },
                    "400": {
                        "description": "Некорректное тело запроса или ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Не удалось создать категорию",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/news/categories/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — News"
                ],
                "summary": "Получить категорию по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID категории",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.NewsCategory"
                        }
                    },
                    "404": {
                        "description": "Категория не найдена",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении категории",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — News"
                ],
                "summary": "Обновить категорию новостей",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID категории",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateNewsCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.NewsCategory"
                        }
                    },
                    "400": {
                        "description": "Некорректное тело запроса или ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "404": {
                        "description": "Категория не найдена",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Не удалось обновить категорию",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Admin — News"
                ],
                "summary": "Удалить категорию новостей",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID категории",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Категория успешно удалена"
                    },
                    "404": {
                        "description": "Категория не найдена",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Не удалось удалить категорию",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/news/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — News"
                ],
                "summary": "Update news (admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateNewsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    },
                    "400": {
                        "description": "Некорректный JSON или ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "404": {
                        "description": "Новость не найдена",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Admin — News"
                ],
                "summary": "Delete news (admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Новость не найдена",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/orders": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Получить список заказов с пагинацией и фильтрацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Orders"
                ],
                "summary": "Get orders list (admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество записей (по умолчанию 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение (по умолчанию 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по статусу (new/in_progress/done/canceled)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по телефону",
                        "name": "phone",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Фильтр по прочитанности",
                        "name": "is_read",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.OrdersWithTotal"
                        }
                    },
                    "500": {
                        "description": "Не удалось получить список заказов",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/orders/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Admin — Orders"
                ],
                "summary": "Delete order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/orders/{id}/read": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Пометить заказ как прочитанный",
                "tags": [
                    "Admin — Orders"
                ],
                "summary": "Mark order as read",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный ID",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Не удалось обновить заказ",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/orders/{id}/status": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Обновить статус заказа (admin)",
                "tags": [
                    "Admin — Orders"
                ],
                "summary": "Update order status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Новый статус (new/in_progress/done/canceled)",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "404": {
                        "description": "Заказ не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Не удалось обновить статус",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/stats": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Stats"
                ],
                "summary": "Admin statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Stats"
                        }
                    }
                }
            }
        },
        "/admin/tours": {
            "post": {
                "description": "Админская ручка: создаёт тур, отель и маршрут одним запросом",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Trips"
                ],
                "summary": "Create Tour with Hotel and Route",
                "parameters": [
                    {
                        "description": "Tour + Hotel + Route",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTourRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CreateTourResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/trips": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Создание нового тура (только админ)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Trips"
                ],
                "summary": "Create trip (admin)",
                "parameters": [
                    {
                        "description": "Trip data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTripRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Trip"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/trips/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Trips"
                ],
                "summary": "Update trip (admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Trip update",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateTripRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Trip"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Admin — Trips"
                ],
                "summary": "Delete trip (admin)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/trips/{id}/full": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Trips"
                ],
                "summary": "Получить тур с отелями и маршрутами",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TripFullResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Trips"
                ],
                "summary": "Обновить тур, отели и маршруты одной кнопкой",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Trip with hotels and routes",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TripFullUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Trip"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/trips/{id}/hotels": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Trips"
                ],
                "summary": "Attach hotel to trip",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hotel ID and Nights",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TripHotel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Не удалось привязать отель",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/trips/{id}/routes/batch": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Trips"
                ],
                "summary": "Создать несколько маршрутов тура",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Маршруты",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TripRouteBatchRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TripRoute"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/trips/{trip_id}/routes/{route_id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Trips"
                ],
                "summary": "Обновить маршрут тура",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "trip_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Route ID",
                        "name": "route_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Маршрут",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TripRouteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TripRoute"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Trips"
                ],
                "summary": "Удалить маршрут тура",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "trip_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Route ID",
                        "name": "route_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/upload": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Загрузка одного или нескольких фото (админка)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Media"
                ],
                "summary": "Upload photos",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Фото (можно несколько)",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Удалить файл по имени (админка)",
                "tags": [
                    "Admin — Media"
                ],
                "summary": "Delete uploaded file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя файла",
                        "name": "file",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/uploads": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Получить список всех загруженных файлов (админка)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Media"
                ],
                "summary": "Get all uploaded files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Users"
                ],
                "summary": "Получить всех пользователей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Не удалось получить список пользователей",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Users"
                ],
                "summary": "Создать пользователя",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Некорректное тело запроса",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка при создании пользователя",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Users"
                ],
                "summary": "Получить пользователя по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении пользователя",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin — Users"
                ],
                "summary": "Обновить данные пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Некорректное тело запроса",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка при обновлении пользователя",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "Admin — Users"
                ],
                "summary": "Удалить пользователя",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка при удалении пользователя",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System — Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "login payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "401": {
                        "description": "Неверный email или пароль",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System — Auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "register payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "409": {
                        "description": "Email уже зарегистрирован",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/currency": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Currency"
                ],
                "summary": "Получить курсы валют",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.CurrencyRate"
                        }
                    },
                    "500": {
                        "description": "Ошибка получения курсов валют",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/date/today": {
            "get": {
                "description": "Получить сегодняшнюю дату в григорианском и исламском календарях",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Date"
                ],
                "summary": "Get today's date",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/feedback": {
            "post": {
                "description": "Оставить заявку \"Перезвоните мне\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Feedback"
                ],
                "summary": "Feedback form",
                "parameters": [
                    {
                        "description": "Имя и телефон",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/news": {
            "get": {
                "description": "Публичный список новостей с фильтрами и пагинацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — News"
                ],
                "summary": "List news (public)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтр по категории",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип медиа: photo|video",
                        "name": "media_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поиск по заголовку или анонсу",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Номер страницы (1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Размер страницы (12)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Не удалось получить список новостей",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/news/popular": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — News"
                ],
                "summary": "Get popular news",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество новостей (по умолчанию 5)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.News"
                            }
                        }
                    },
                    "500": {
                        "description": "Не удалось получить популярные новости",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/news/recent": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — News"
                ],
                "summary": "Get recent news",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество новостей (по умолчанию 3)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.News"
                            }
                        }
                    },
                    "500": {
                        "description": "Не удалось получить последние новости",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/news/{slug_or_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — News"
                ],
                "summary": "Get news by slug or id (public)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug или ID новости",
                        "name": "slug_or_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.News"
                        }
                    },
                    "404": {
                        "description": "Новость не найдена",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Не удалось получить новость",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System — Auth"
                ],
                "summary": "Получить профиль текущего пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка при загрузке профиля",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System — Auth"
                ],
                "summary": "Обновить профиль текущего пользователя",
                "parameters": [
                    {
                        "description": "Данные профиля",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Некорректное тело запроса",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка при обновлении профиля",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Search"
                ],
                "summary": "Global search (trips + news)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SearchResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка поиска",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips": {
            "get": {
                "description": "Публичный поиск туров с фильтрацией и пагинацией",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "List trips",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поиск по названию тура",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Город вылета",
                        "name": "departure_city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип тура",
                        "name": "trip_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Сезон",
                        "name": "season",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Город в маршруте",
                        "name": "route_city",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Статус тура",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата начала с (YYYY-MM-DD)",
                        "name": "start_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата окончания до (YYYY-MM-DD)",
                        "name": "end_before",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит (по умолчанию 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success + items + meta",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении списка туров",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/full": {
            "get": {
                "description": "Возвращает список всех туров вместе с отелями, маршрутами и опциями",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "All trips with full data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TripPageResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении туров",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/main": {
            "get": {
                "description": "Получить главный тур для главной страницы (только название и обратный отсчёт)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "Get main trip with countdown",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Главный тур не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/popular": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "Get popular trips",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Количество туров (по умолчанию 5)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Trip"
                            }
                        }
                    },
                    "500": {
                        "description": "Не удалось получить популярные туры",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/relations": {
            "get": {
                "description": "Возвращает все туры вместе с отелями и маршрутами",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "List all trips with hotels and routes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поиск по названию тура",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Город вылета",
                        "name": "departure_city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип тура",
                        "name": "trip_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Сезон",
                        "name": "season",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Город в маршруте",
                        "name": "route_city",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Статус тура",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата начала с (YYYY-MM-DD)",
                        "name": "start_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата окончания до (YYYY-MM-DD)",
                        "name": "end_before",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит (по умолчанию 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TripWithRelations"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/{id}": {
            "get": {
                "description": "Публичный просмотр тура",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "Get trip by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Trip"
                        }
                    },
                    "404": {
                        "description": "Тур не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении тура",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/{id}/buy": {
            "post": {
                "description": "Отправка заявки на покупку тура в Telegram",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "Buy trip",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные покупателя",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.BuyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "404": {
                        "description": "Тур не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка при покупке тура",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/{id}/countdown": {
            "get": {
                "description": "Получить обратный отсчёт до конца бронирования",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "Get booking countdown",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Тур не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении тура",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/{id}/page": {
            "get": {
                "description": "Полный набор данных для страницы тура (тур, отели, отзывы, популярные туры, новости, курсы, countdown)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "Trip page data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Поиск по названию тура",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Город вылета",
                        "name": "departure_city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип тура",
                        "name": "trip_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Сезон",
                        "name": "season",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Город в маршруте",
                        "name": "route_city",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Статус тура",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата начала с (YYYY-MM-DD)",
                        "name": "start_after",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата окончания до (YYYY-MM-DD)",
                        "name": "end_before",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит (по умолчанию 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TripPageResponse"
                        }
                    },
                    "404": {
                        "description": "Тур не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/{id}/relations": {
            "get": {
                "description": "Возвращает тур вместе с отелями и маршрутом",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "Get trip with hotels and routes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TripWithRelations"
                        }
                    },
                    "404": {
                        "description": "Тур не найден",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/{id}/routes": {
            "get": {
                "description": "Возвращает список маршрутов в виде city_1, city_2, city_3...",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "Получить маршруты тура (новый формат)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID тура",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success + routes в новом формате",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Некорректный trip_id",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Ошибка получения маршрута",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/{id}/routes/ui": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Trips"
                ],
                "summary": "UI-маршрут тура (для плашки)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TripRouteUIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        },
        "/trips/{trip_id}/reviews": {
            "get": {
                "description": "Получить список отзывов по туру",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Reviews"
                ],
                "summary": "List reviews for trip",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Trip ID",
                        "name": "trip_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedTripReviews"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            },
            "post": {
                "description": "Добавить отзыв к туру",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public — Reviews"
                ],
                "summary": "Leave review",
                "parameters": [
                    {
                        "description": "Review",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TripReview"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorData"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "helpers.ErrorData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.AuthResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.BuyRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Countdown": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "integer"
                },
                "hours": {
                    "type": "integer"
                },
                "minutes": {
                    "type": "integer"
                },
                "seconds": {
                    "type": "integer"
                }
            }
        },
        "models.CreateNewsCategoryRequest": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string",
                    "example": "hajj_news"
                },
                "title": {
                    "type": "string",
                    "example": "Новости хаджа"
                }
            }
        },
        "models.CreateNewsRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "excerpt": {
                    "type": "string"
                },
                "media_type": {
                    "type": "string"
                },
                "published_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "urls": {
                    "description": "👈 массив ссылок",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "video_url": {
                    "type": "string"
                }
            }
        },
        "models.CreateReviewRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "example": "Отличный тур!"
                },
                "rating": {
                    "type": "integer",
                    "example": 5
                },
                "trip_id": {
                    "type": "integer",
                    "example": 1
                },
                "user_name": {
                    "type": "string",
                    "example": "Иван"
                }
            }
        },
        "models.CreateTourRequest": {
            "type": "object",
            "properties": {
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HotelRequest"
                    }
                },
                "route_cities": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/models.TripRouteCity"
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripRouteRequest"
                    }
                },
                "trip": {
                    "$ref": "#/definitions/models.CreateTripRequest"
                }
            }
        },
        "models.CreateTourResponse": {
            "type": "object",
            "properties": {
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HotelResponse"
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripRoute"
                    }
                },
                "success": {
                    "type": "boolean"
                },
                "trip": {
                    "$ref": "#/definitions/models.Trip"
                }
            }
        },
        "models.CreateTripRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "booking_deadline": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "departure_city": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_percent": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HotelAttach"
                    }
                },
                "main": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "season": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "trip_type": {
                    "type": "string"
                },
                "urls": {
                    "description": "👈 массив ссылок",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "models.CurrencyRatesPayload": {
            "type": "object",
            "properties": {
                "sar": {
                    "type": "number"
                },
                "usd": {
                    "type": "number"
                }
            }
        },
        "models.Feedback": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_read": {
                    "type": "boolean"
                },
                "user_name": {
                    "type": "string"
                },
                "user_phone": {
                    "type": "string"
                }
            }
        },
        "models.FeedbackRequest": {
            "type": "object",
            "properties": {
                "user_name": {
                    "type": "string"
                },
                "user_phone": {
                    "type": "string"
                }
            }
        },
        "models.HotelAttach": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "integer"
                },
                "nights": {
                    "type": "integer"
                }
            }
        },
        "models.HotelRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "distance": {
                    "type": "number"
                },
                "distance_text": {
                    "type": "string"
                },
                "guests": {
                    "type": "string"
                },
                "hotel_id": {
                    "type": "integer"
                },
                "meals": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nights": {
                    "type": "integer"
                },
                "stars": {
                    "type": "integer"
                },
                "transfer": {
                    "type": "string"
                },
                "urls": {
                    "description": "👈 массив ссылок",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.HotelResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "distance": {
                    "type": "number"
                },
                "distance_text": {
                    "type": "string"
                },
                "guests": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "meals": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nights": {
                    "type": "integer"
                },
                "stars": {
                    "type": "integer"
                },
                "transfer": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "urls": {
                    "description": "👈 массив ссылок",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.KV": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 42
                },
                "key": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.News": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "comments_count": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "excerpt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "media_type": {
                    "type": "string"
                },
                "published_at": {
                    "type": "string"
                },
                "reposts_count": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "urls": {
                    "description": "👈 массив ссылок вместо preview_url",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "video_url": {
                    "type": "string"
                },
                "views_count": {
                    "type": "integer"
                }
            }
        },
        "models.NewsCategory": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_read": {
                    "type": "boolean"
                },
                "name": {
                    "description": "пользовательские поля без префиксов",
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "trip_id": {
                    "type": "integer",
                    "example": 123
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.PaginatedTripReviews": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripReview"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "models.SearchResult": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "highlighted": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Stats": {
            "type": "object",
            "properties": {
                "news_by_category": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.KV"
                    }
                },
                "news_by_status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.KV"
                    }
                },
                "total_news": {
                    "type": "integer",
                    "example": 25
                },
                "total_trips": {
                    "type": "integer",
                    "example": 12
                },
                "total_users": {
                    "type": "integer",
                    "example": 100
                },
                "trips_by_city": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.KV"
                    }
                },
                "trips_by_type": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.KV"
                    }
                },
                "users_by_role": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.KV"
                    }
                }
            }
        },
        "models.Trip": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "booking_deadline": {
                    "type": "string"
                },
                "buys_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "departure_city": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_percent": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "final_price": {
                    "type": "number"
                },
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripHotelWithInfo"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "main": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "season": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "trip_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "urls": {
                    "description": "👈 массив ссылок вместо photo_url",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "views_count": {
                    "type": "integer"
                }
            }
        },
        "models.TripFullResponse": {
            "type": "object",
            "properties": {
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HotelResponse"
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripRoute"
                    }
                },
                "trip": {
                    "$ref": "#/definitions/models.Trip"
                }
            }
        },
        "models.TripFullUpdateRequest": {
            "type": "object",
            "properties": {
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripHotel"
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripRoute"
                    }
                },
                "trip": {
                    "$ref": "#/definitions/models.UpdateTripRequest"
                }
            }
        },
        "models.TripHotel": {
            "type": "object",
            "properties": {
                "hotel_id": {
                    "type": "integer"
                },
                "nights": {
                    "type": "integer"
                },
                "trip_id": {
                    "type": "integer"
                }
            }
        },
        "models.TripHotelWithInfo": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "distance": {
                    "type": "number"
                },
                "hotel_id": {
                    "type": "integer"
                },
                "meals": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nights": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                }
            }
        },
        "models.TripOptionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "models.TripPageResponse": {
            "type": "object",
            "properties": {
                "countdown": {
                    "$ref": "#/definitions/models.Countdown"
                },
                "currency_rates": {
                    "$ref": "#/definitions/models.CurrencyRatesPayload"
                },
                "duration_days": {
                    "type": "integer"
                },
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HotelResponse"
                    }
                },
                "news": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.News"
                    }
                },
                "options": {
                    "description": "🔹 новые доп.опции",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripOptionResponse"
                    }
                },
                "popular_trips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Trip"
                    }
                },
                "reviews": {
                    "$ref": "#/definitions/models.TripPageReviews"
                },
                "routes": {
                    "$ref": "#/definitions/models.TripRouteResponse"
                },
                "trip": {
                    "$ref": "#/definitions/models.Trip"
                }
            }
        },
        "models.TripPageReviews": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripReview"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.TripReview": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                },
                "trip_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "models.TripRoute": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "type": "integer"
                },
                "stop_time": {
                    "type": "string"
                },
                "transport": {
                    "type": "string"
                },
                "trip_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.TripRouteBatchRequest": {
            "type": "object",
            "required": [
                "routes"
            ],
            "properties": {
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripRouteRequest"
                    }
                }
            }
        },
        "models.TripRouteCitiesResponse": {
            "type": "object",
            "properties": {
                "route_cities": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/models.TripRouteCity"
                    }
                }
            }
        },
        "models.TripRouteCity": {
            "type": "object",
            "required": [
                "city"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "stop_time": {
                    "type": "string"
                },
                "transport": {
                    "type": "string"
                }
            }
        },
        "models.TripRouteRequest": {
            "type": "object",
            "required": [
                "city"
            ],
            "properties": {
                "city": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "stop_time": {
                    "type": "string"
                },
                "transport": {
                    "type": "string"
                }
            }
        },
        "models.TripRouteResponse": {
            "type": "object",
            "properties": {
                "route": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripRouteSegment"
                    }
                },
                "total_duration": {
                    "type": "string"
                }
            }
        },
        "models.TripRouteSegment": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "stop_time": {
                    "type": "string"
                },
                "transport": {
                    "type": "string"
                }
            }
        },
        "models.TripRouteUIItem": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "duration_text": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "stop_time_text": {
                    "type": "string"
                },
                "transport": {
                    "type": "string"
                }
            }
        },
        "models.TripRouteUIResponse": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TripRouteUIItem"
                    }
                },
                "to": {
                    "type": "string"
                },
                "total_duration": {
                    "type": "string"
                },
                "total_duration_minutes": {
                    "type": "integer"
                }
            }
        },
        "models.TripWithRelations": {
            "type": "object",
            "properties": {
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HotelResponse"
                    }
                },
                "routes": {
                    "$ref": "#/definitions/models.TripRouteCitiesResponse"
                },
                "trip": {
                    "$ref": "#/definitions/models.Trip"
                }
            }
        },
        "models.UpdateNewsCategoryRequest": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.UpdateNewsRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "content": {
                    "type": "string"
                },
                "excerpt": {
                    "type": "string"
                },
                "media_type": {
                    "type": "string"
                },
                "published_at": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "urls": {
                    "description": "👈 массив ссылок",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "video_url": {
                    "type": "string"
                }
            }
        },
        "models.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                }
            }
        },
        "models.UpdateTripRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "booking_deadline": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "departure_city": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_percent": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HotelAttach"
                    }
                },
                "main": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                },
                "season": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "trip_type": {
                    "type": "string"
                },
                "urls": {
                    "description": "👈 массив ссылок",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "services.CurrencyRate": {
            "type": "object",
            "properties": {
                "sar": {
                    "description": "риал",
                    "type": "number"
                },
                "usd": {
                    "type": "number"
                }
            }
        },
        "services.FeedbacksWithTotal": {
            "type": "object",
            "properties": {
                "feedbacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Feedback"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "services.OrdersWithTotal": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Order"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "https://api.web95.tech/api/v1",
	Schemes:          []string{},
	Title:            "Travel API",
	Description:      "API for Travel project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
