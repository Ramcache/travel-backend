basePath: https://api.web95.tech/api/v1
definitions:
  helpers.ErrorData:
    properties:
      code:
        type: string
      fields:
        additionalProperties:
          type: string
        type: object
      message:
        type: string
    type: object
  models.AuthResponse:
    properties:
      token:
        type: string
    type: object
  models.BuyRequest:
    properties:
      name:
        example: Иван
        type: string
      phone:
        example: "+79998887766"
        type: string
      trip_id:
        example: 1
        type: integer
    type: object
  models.CreateNewsCategoryRequest:
    properties:
      slug:
        example: hajj_news
        type: string
      title:
        example: Новости хаджа
        type: string
    type: object
  models.CreateNewsRequest:
    properties:
      category_id:
        type: integer
      content:
        type: string
      excerpt:
        type: string
      media_type:
        type: string
      preview_url:
        type: string
      published_at:
        type: string
      status:
        type: string
      title:
        type: string
      video_url:
        type: string
    type: object
  models.CreateTripRequest:
    properties:
      booking_deadline:
        type: string
      currency:
        type: string
      departure_city:
        type: string
      description:
        type: string
      end_date:
        type: string
      main:
        type: boolean
      photo_url:
        type: string
      price:
        type: number
      season:
        type: string
      start_date:
        type: string
      title:
        type: string
      trip_type:
        type: string
    type: object
  models.CreateUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      role_id:
        type: integer
    type: object
  models.KV:
    properties:
      count:
        example: 42
        type: integer
      key:
        example: admin
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.News:
    properties:
      author_id:
        type: integer
      category_id:
        type: integer
      comments_count:
        type: integer
      content:
        type: string
      created_at:
        type: string
      excerpt:
        type: string
      id:
        type: integer
      media_type:
        type: string
      preview_url:
        type: string
      published_at:
        type: string
      reposts_count:
        type: integer
      slug:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      video_url:
        type: string
      views_count:
        type: integer
    type: object
  models.NewsCategory:
    properties:
      created_at:
        type: string
      id:
        type: integer
      slug:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.Order:
    properties:
      created_at:
        type: string
      id:
        type: integer
      is_read:
        type: boolean
      status:
        type: string
      trip_id:
        description: |-
          TripID может быть числом или null
          swagger:strfmt int32
        example: 123
        type: integer
      user_name:
        type: string
      user_phone:
        type: string
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.Stats:
    properties:
      news_by_category:
        items:
          $ref: '#/definitions/models.KV'
        type: array
      news_by_status:
        items:
          $ref: '#/definitions/models.KV'
        type: array
      total_news:
        example: 25
        type: integer
      total_trips:
        example: 12
        type: integer
      total_users:
        example: 100
        type: integer
      trips_by_city:
        items:
          $ref: '#/definitions/models.KV'
        type: array
      trips_by_type:
        items:
          $ref: '#/definitions/models.KV'
        type: array
      users_by_role:
        items:
          $ref: '#/definitions/models.KV'
        type: array
    type: object
  models.Trip:
    properties:
      booking_deadline:
        type: string
      buys_count:
        type: integer
      created_at:
        type: string
      currency:
        type: string
      departure_city:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      main:
        type: boolean
      photo_url:
        type: string
      price:
        type: number
      season:
        type: string
      start_date:
        type: string
      title:
        type: string
      trip_type:
        type: string
      updated_at:
        type: string
      views_count:
        type: integer
    type: object
  models.UpdateNewsCategoryRequest:
    properties:
      slug:
        type: string
      title:
        type: string
    type: object
  models.UpdateNewsRequest:
    properties:
      category_id:
        type: integer
      content:
        type: string
      excerpt:
        type: string
      media_type:
        type: string
      preview_url:
        type: string
      published_at:
        type: string
      slug:
        type: string
      status:
        type: string
      title:
        type: string
      video_url:
        type: string
    type: object
  models.UpdateProfileRequest:
    properties:
      avatar:
        type: string
      full_name:
        type: string
    type: object
  models.UpdateTripRequest:
    properties:
      booking_deadline:
        type: string
      currency:
        type: string
      departure_city:
        type: string
      description:
        type: string
      end_date:
        type: string
      main:
        type: boolean
      photo_url:
        type: string
      price:
        type: number
      season:
        type: string
      start_date:
        type: string
      title:
        type: string
      trip_type:
        type: string
    type: object
  models.UpdateUserRequest:
    properties:
      full_name:
        type: string
      role_id:
        type: integer
    type: object
  models.User:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      role_id:
        type: integer
      updated_at:
        type: string
    type: object
  services.CurrencyRate:
    properties:
      sar:
        description: риал
        type: number
      usd:
        type: number
    type: object
  services.OrdersWithTotal:
    properties:
      orders:
        items:
          $ref: '#/definitions/models.Order'
        type: array
      total:
        type: integer
    type: object
info:
  contact: {}
  description: API for Travel project
  title: Travel API manasik
  version: "1.0"
paths:
  /admin/news:
    get:
      parameters:
      - description: 'Статус: draft|published|archived'
        in: query
        name: status
        type: string
      - description: Фильтр по категории
        in: query
        name: category_id
        type: string
      - description: Фильтр по типу медиа
        in: query
        name: media_type
        type: string
      - description: Поиск по заголовку/анонсу
        in: query
        name: search
        type: string
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Размер страницы (по умолчанию 20)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Не удалось получить список новостей
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: List news (admin)
      tags:
      - admin-news
    post:
      consumes:
      - application/json
      parameters:
      - description: payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateNewsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.News'
        "400":
          description: Некорректный JSON или ошибка валидации
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Create news (admin)
      tags:
      - admin-news
  /admin/news/{id}:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Новость не найдена
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Delete news (admin)
      tags:
      - admin-news
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateNewsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.News'
        "400":
          description: Некорректный JSON или ошибка валидации
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "404":
          description: Новость не найдена
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Update news (admin)
      tags:
      - admin-news
  /admin/news/categories:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.NewsCategory'
            type: array
        "500":
          description: Не удалось получить категории
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Получить список категорий новостей
      tags:
      - news-categories
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные категории
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateNewsCategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.NewsCategory'
        "400":
          description: Некорректное тело запроса или ошибка валидации
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Не удалось создать категорию
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Создать категорию новостей
      tags:
      - news-categories
  /admin/news/categories/{id}:
    delete:
      parameters:
      - description: ID категории
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Категория успешно удалена
        "404":
          description: Категория не найдена
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Не удалось удалить категорию
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Удалить категорию новостей
      tags:
      - news-categories
    get:
      parameters:
      - description: ID категории
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewsCategory'
        "404":
          description: Категория не найдена
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при получении категории
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Получить категорию по ID
      tags:
      - news-categories
    put:
      consumes:
      - application/json
      parameters:
      - description: ID категории
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdateNewsCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NewsCategory'
        "400":
          description: Некорректное тело запроса или ошибка валидации
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "404":
          description: Категория не найдена
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Не удалось обновить категорию
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Обновить категорию новостей
      tags:
      - news-categories
  /admin/orders:
    get:
      description: Получить список заказов с пагинацией и фильтрацией
      parameters:
      - description: Количество записей (по умолчанию 20)
        in: query
        name: limit
        type: integer
      - description: Смещение (по умолчанию 0)
        in: query
        name: offset
        type: integer
      - description: Фильтр по статусу (new/in_progress/done/canceled)
        in: query
        name: status
        type: string
      - description: Фильтр по телефону
        in: query
        name: phone
        type: string
      - description: Фильтр по прочитанности
        in: query
        name: is_read
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.OrdersWithTotal'
        "500":
          description: Не удалось получить список заказов
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Get orders list (admin)
      tags:
      - admin
  /admin/orders/{id}/read:
    post:
      description: Пометить заказ как прочитанный
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректный ID
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Не удалось обновить заказ
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Mark order as read
      tags:
      - admin
  /admin/orders/{id}/status:
    post:
      description: Обновить статус заказа (admin)
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Новый статус (new/in_progress/done/canceled)
        in: query
        name: status
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "404":
          description: Заказ не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Не удалось обновить статус
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Update order status
      tags:
      - admin
  /admin/stats:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Stats'
      security:
      - Bearer: []
      summary: Admin statistics
      tags:
      - admin
  /admin/trips:
    post:
      consumes:
      - application/json
      description: Создание нового тура (только админ)
      parameters:
      - description: Trip data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateTripRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Trip'
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при создании тура
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Create trip (admin)
      tags:
      - trips
  /admin/trips/{id}:
    delete:
      description: Удаление тура (только админ)
      parameters:
      - description: Trip ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Тур не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при удалении тура
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Delete trip (admin)
      tags:
      - trips
    put:
      consumes:
      - application/json
      description: Обновление данных тура (только админ)
      parameters:
      - description: Trip ID
        in: path
        name: id
        required: true
        type: integer
      - description: Trip update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTripRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Trip'
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "404":
          description: Тур не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при обновлении тура
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Update trip (admin)
      tags:
      - trips
  /admin/users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Не удалось получить список пользователей
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Получить всех пользователей
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Некорректное тело запроса
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при создании пользователя
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Создать пользователя
      tags:
      - users
  /admin/users/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при удалении пользователя
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Удалить пользователя
      tags:
      - users
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при получении пользователя
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Получить пользователя по ID
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Некорректное тело запроса
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при обновлении пользователя
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Обновить данные пользователя
      tags:
      - users
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: login payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "401":
          description: Неверный email или пароль
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: register payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "409":
          description: Email уже зарегистрирован
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Register
      tags:
      - auth
  /currency:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.CurrencyRate'
        "500":
          description: Ошибка получения курсов валют
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Получить курсы валют
      tags:
      - currency
  /news:
    get:
      description: Публичный список новостей с фильтрами и пагинацией
      parameters:
      - description: 'Фильтр: hadj|company'
        in: query
        name: category_id
        type: string
      - description: 'Тип медиа: photo|video'
        in: query
        name: media_type
        type: string
      - description: Поиск по заголовку или excerpt
        in: query
        name: search
        type: string
      - description: Номер страницы (1)
        in: query
        name: page
        type: integer
      - description: Размер страницы (12)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Не удалось получить список новостей
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: List news (public)
      tags:
      - news
  /news/{slug_or_id}:
    get:
      parameters:
      - description: Slug или ID новости
        in: path
        name: slug_or_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.News'
        "404":
          description: Новость не найдена
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Не удалось получить новость
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Get news by slug or id (public)
      tags:
      - news
  /news/popular:
    get:
      parameters:
      - description: Количество новостей (по умолчанию 5)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.News'
            type: array
        "500":
          description: Не удалось получить популярные новости
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Get popular news
      tags:
      - news
  /news/recent:
    get:
      parameters:
      - description: Количество новостей (по умолчанию 3)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.News'
            type: array
        "500":
          description: Не удалось получить последние новости
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Get recent news
      tags:
      - news
  /profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Неавторизованный доступ
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при загрузке профиля
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Получить профиль текущего пользователя
      tags:
      - profile
    put:
      consumes:
      - application/json
      parameters:
      - description: Данные профиля
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Некорректное тело запроса
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "401":
          description: Неавторизованный доступ
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при обновлении профиля
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      security:
      - Bearer: []
      summary: Обновить профиль текущего пользователя
      tags:
      - profile
  /trips:
    get:
      description: Публичный поиск туров с фильтрацией
      parameters:
      - description: Город вылета
        in: query
        name: departure_city
        type: string
      - description: Тип тура (пляжный, экскурсионный, семейный)
        in: query
        name: trip_type
        type: string
      - description: 'Сезон (например: 2025 или лето 2025)'
        in: query
        name: season
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Trip'
            type: array
        "500":
          description: Ошибка при получении списка туров
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: List trips
      tags:
      - trips
  /trips/{id}:
    get:
      description: Публичный просмотр тура
      parameters:
      - description: Trip ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Trip'
        "404":
          description: Тур не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при получении тура
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Get trip by id
      tags:
      - trips
  /trips/{id}/buy:
    post:
      consumes:
      - application/json
      description: Отправка заявки на покупку тура в Telegram
      parameters:
      - description: Trip ID
        in: path
        name: id
        required: true
        type: integer
      - description: Данные покупателя
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.BuyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "404":
          description: Тур не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при покупке тура
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Buy trip
      tags:
      - trips
  /trips/{id}/countdown:
    get:
      description: Получить обратный отсчёт до конца бронирования
      parameters:
      - description: Trip ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: integer
            type: object
        "404":
          description: Тур не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при получении тура
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Get booking countdown
      tags:
      - trips
  /trips/buy:
    post:
      consumes:
      - application/json
      description: Отправка заявки без указания тура
      parameters:
      - description: Данные покупателя
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.BuyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/helpers.ErrorData'
        "500":
          description: Ошибка при покупке
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Buy without trip
      tags:
      - trips
  /trips/main:
    get:
      description: Получить главный тур для главной страницы (только название и обратный
        отсчёт)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Главный тур не найден
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Get main trip with countdown
      tags:
      - trips
  /trips/popular:
    get:
      parameters:
      - description: Количество туров (по умолчанию 5)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Trip'
            type: array
        "500":
          description: Не удалось получить популярные туры
          schema:
            $ref: '#/definitions/helpers.ErrorData'
      summary: Get popular trips
      tags:
      - trips
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
