basePath: /api/v1
definitions:
  helpers.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.AuthResponse:
    properties:
      token:
        type: string
    type: object
  models.CreateNewsRequest:
    properties:
      category:
        type: string
      content:
        type: string
      excerpt:
        type: string
      media_type:
        type: string
      preview_url:
        type: string
      published_at:
        type: string
      slug:
        type: string
      status:
        type: string
      title:
        type: string
      video_url:
        type: string
    type: object
  models.CreateTripRequest:
    properties:
      booking_deadline:
        type: string
      currency:
        type: string
      departure_city:
        type: string
      description:
        type: string
      end_date:
        type: string
      photo_url:
        type: string
      price:
        type: number
      season:
        type: string
      start_date:
        type: string
      title:
        type: string
      trip_type:
        type: string
    type: object
  models.CreateUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      role_id:
        type: integer
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.News:
    properties:
      author_id:
        type: integer
      category:
        type: string
      comments_count:
        type: integer
      content:
        type: string
      created_at:
        type: string
      excerpt:
        type: string
      id:
        type: integer
      media_type:
        type: string
      preview_url:
        type: string
      published_at:
        type: string
      reposts_count:
        type: integer
      slug:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      video_url:
        type: string
      views_count:
        type: integer
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  models.Trip:
    properties:
      booking_deadline:
        type: string
      created_at:
        type: string
      currency:
        type: string
      departure_city:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      photo_url:
        type: string
      price:
        type: number
      season:
        type: string
      start_date:
        type: string
      title:
        type: string
      trip_type:
        type: string
      updated_at:
        type: string
    type: object
  models.UpdateNewsRequest:
    properties:
      category:
        type: string
      content:
        type: string
      excerpt:
        type: string
      media_type:
        type: string
      preview_url:
        type: string
      published_at:
        type: string
      slug:
        type: string
      status:
        type: string
      title:
        type: string
      video_url:
        type: string
    type: object
  models.UpdateProfileRequest:
    properties:
      avatar:
        type: string
      full_name:
        type: string
    type: object
  models.UpdateTripRequest:
    properties:
      booking_deadline:
        type: string
      currency:
        type: string
      departure_city:
        type: string
      description:
        type: string
      end_date:
        type: string
      photo_url:
        type: string
      price:
        type: number
      season:
        type: string
      start_date:
        type: string
      title:
        type: string
      trip_type:
        type: string
    type: object
  models.UpdateUserRequest:
    properties:
      full_name:
        type: string
      role_id:
        type: integer
    type: object
  models.User:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      role_id:
        type: integer
      updated_at:
        type: string
    type: object
  services.CurrencyRate:
    properties:
      sar:
        description: риал
        type: number
      usd:
        type: number
    type: object
info:
  contact: {}
  description: API for Travel project
  title: Travel API
  version: "1.0"
paths:
  /admin/news:
    get:
      parameters:
      - description: 'Статус: draft|published|archived'
        in: query
        name: status
        type: string
      - description: Фильтр по категории
        in: query
        name: category
        type: string
      - description: Фильтр по типу медиа
        in: query
        name: media_type
        type: string
      - description: Поиск по заголовку/анонсу
        in: query
        name: search
        type: string
      - description: Номер страницы
        in: query
        name: page
        type: integer
      - description: Размер страницы (по умолчанию 20)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: List news (admin)
      tags:
      - admin-news
    post:
      consumes:
      - application/json
      parameters:
      - description: payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateNewsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.News'
      security:
      - Bearer: []
      summary: Create news (admin)
      tags:
      - admin-news
  /admin/news/{id}:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
      security:
      - Bearer: []
      summary: Delete news (admin)
      tags:
      - admin-news
    put:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateNewsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.News'
      security:
      - Bearer: []
      summary: Update news (admin)
      tags:
      - admin-news
  /admin/trips:
    post:
      consumes:
      - application/json
      description: Создание нового тура (только админ)
      parameters:
      - description: Trip data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateTripRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Trip'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Create trip (admin)
      tags:
      - trips
  /admin/trips/{id}:
    delete:
      description: Удаление тура (только админ)
      parameters:
      - description: Trip ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Delete trip (admin)
      tags:
      - trips
    put:
      consumes:
      - application/json
      description: Обновление данных тура (только админ)
      parameters:
      - description: Trip ID
        in: path
        name: id
        required: true
        type: integer
      - description: Trip update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTripRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Trip'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Update trip (admin)
      tags:
      - trips
  /admin/users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - Bearer: []
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - Bearer: []
      summary: Create user
      tags:
      - users
  /admin/users/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
      security:
      - Bearer: []
      summary: Delete user
      tags:
      - users
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - Bearer: []
      summary: Get user by id
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      security:
      - Bearer: []
      summary: Update user
      tags:
      - users
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: login payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Login
      tags:
      - auth
  /auth/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: You are authorized
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      security:
      - Bearer: []
      summary: Me
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: register payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Register
      tags:
      - auth
  /currency:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/services.CurrencyRate'
      summary: Get currency rates
      tags:
      - currency
  /news:
    get:
      description: Публичный список новостей с фильтрами и пагинацией
      parameters:
      - description: 'Фильтр: hadj|company'
        in: query
        name: category
        type: string
      - description: 'Тип медиа: photo|video'
        in: query
        name: media_type
        type: string
      - description: Поиск по заголовку или excerpt
        in: query
        name: search
        type: string
      - description: Номер страницы (1)
        in: query
        name: page
        type: integer
      - description: Размер страницы (12)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: List news (public)
      tags:
      - news
  /news/{slug_or_id}:
    get:
      parameters:
      - description: Slug или ID новости
        in: path
        name: slug_or_id
        required: true
        type: string
      - description: ID новости
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.News'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Get news by slug or id (public)
      tags:
      - news
  /news/popular:
    get:
      parameters:
      - description: Количество новостей (по умолчанию 5)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.News'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Get popular news
      tags:
      - news
  /news/recent:
    get:
      parameters:
      - description: Количество новостей (по умолчанию 3)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.News'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Get recent news
      tags:
      - news
  /profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      security:
      - Bearer: []
      summary: Get current user profile
      tags:
      - profile
    put:
      consumes:
      - application/json
      parameters:
      - description: profile
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      security:
      - Bearer: []
      summary: Update current user profile
      tags:
      - profile
  /trips:
    get:
      description: Публичный поиск туров с фильтрацией
      parameters:
      - description: Город вылета
        in: query
        name: departure_city
        type: string
      - description: Тип тура (пляжный, экскурсионный, семейный)
        in: query
        name: trip_type
        type: string
      - description: 'Сезон (например: 2025 или лето 2025)'
        in: query
        name: season
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Trip'
            type: array
      summary: List trips
      tags:
      - trips
  /trips/{id}:
    get:
      description: Публичный просмотр тура
      parameters:
      - description: Trip ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Trip'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get trip by id
      tags:
      - trips
  /trips/{id}/countdown:
    get:
      parameters:
      - description: Trip ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: integer
            type: object
      summary: Get booking countdown
      tags:
      - trips
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
